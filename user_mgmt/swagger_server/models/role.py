# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Role(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self,
                 name: str=None,
                 permissions: List[str]=None):  # noqa: E501
        """Role - a model defined in Swagger

        :param name: The name of this Role.  # noqa: E501
        :type name: str
        :param permissions: The permissions of this Role.  # noqa: E501
        :type permissions: List[str]
        """
        self.swagger_types = {'name': str, 'permissions': List[str]}

        self.attribute_map = {'name': 'name', 'permissions': 'permissions'}
        self._name = name
        self._permissions = permissions

    @classmethod
    def from_dict(cls, dikt) -> 'Role':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Role of this Role.  # noqa: E501
        :rtype: Role
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this Role.


        :return: The name of this Role.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Role.


        :param name: The name of this Role.
        :type name: str
        """

        self._name = name

    @property
    def permissions(self) -> List[str]:
        """Gets the permissions of this Role.


        :return: The permissions of this Role.
        :rtype: List[str]
        """
        return self._permissions

    @permissions.setter
    def permissions(self, permissions: List[str]):
        """Sets the permissions of this Role.


        :param permissions: The permissions of this Role.
        :type permissions: List[str]
        """

        self._permissions = permissions
